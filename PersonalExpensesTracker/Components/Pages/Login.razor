@page "/"
@using Blazored.LocalStorage
@using PersonalExpensesTracker.Models
@using PersonalExpensesTracker.Services
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage


<div class="body">
    <div class="login-container">
        <div class="left-panel">
            <h1 class="tracker-title">Personal Expenses Tracker</h1>
            <p class="slogan">
                Plan <span>better</span>,<br />
                Spend <span>smarter</span>,<br />
                Stay <span>debt-free</span>.
            </p>
            <p class="login-prompt">Login to access your dashboard</p>
        </div>
        <div class="right-panel">
            <h2 class="login-title">Login</h2>
            <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="input-field">
                    <InputText id="username" class="form-control" placeholder="Username" @bind-Value="loginModel.Username" />
                    <i class="icon-user"></i>
                </div>
                <div class="input-field">
                    <InputText id="password" type="password" class="form-control" placeholder="Password" @bind-Value="loginModel.Password" />
                    <i class="icon-lock"></i>
                </div>
                <div class="input-field">
                    <select id="currency" class="form-control" @bind="loginModel.PreferredCurrency">
                        <option value="" disabled selected>Preferred Currency</option>
                        <option value="USD">USD</option>
                        <option value="EUR">EUR</option>
                        <option value="NPR">NPR</option>
                    </select>
                </div>
                <button type="submit" class="login-btn">Login</button>
            </EditForm>

            @if (loginFailed)
            {
                <div class="alert alert-danger mt-3">
                    Invalid username or password.
                </div>
            }
        </div>
    </div>
</div>


@code {
    private LoginModel loginModel = new LoginModel();
    private bool loginFailed = false;

    private async Task HandleLogin()
    {
        // Hardcoded username and password validation
        if (loginModel.Username == "admin" && loginModel.Password == "password123")
        {
            // Save the preferred currency in local storage
            await LocalStorage.SetItemAsync("preferredCurrency", loginModel.PreferredCurrency);

            // Redirect to the dashboard
            Navigation.NavigateTo("/dashboard");
        }
        else
        {
            loginFailed = true; // Show error if login failed
        }
    }


}